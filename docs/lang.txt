В предложенной реализации выполнены варианты I.1, II.1, III.2, III.3, все подварианты пунктов IV, V и VI. То есть, синтаксис таков:

Программа начинается со слова program и заключается в фигурные скобки. Сначала идут объявления переменных в том же формате, что и C, за тем исключением, что инициализированы они могут быть только константами, причём строго того же типа, что и переменная (то есть переменной типа real надо присваивать 1.0, а не 1). Доступные типы: integer ([+-][0-9]+), string (заключается в двойные кавычки, доступно экранирование), boolean (true или false) и real ([+-][0-9]+\.[0-9]+). Затем идут операторы.

Доступные операторы: if-then, if-then-else, while-do, do-while, break, continue (семантика — как в C за тем исключением, что условия должны быть строго типа boolean), write (семантика — как у WriteLn в Pascal), read (семантика — как у ReadLn в Pascal, но может принимать только один аргумент, всегда читает одну строку и не может читать boolean) и выражение. В выражениях доступны следующие операции: присваивание =, алгебраические +, -, *, /, % (последнее — только для integer; для string доступно только первое), унарные + и -, сравнения ==, !=, >, <, >=, <= (последние два — только для чисел integer и real, остальные доступны и для string), логические not, and и or. Подробнее о приоритетах и совместимости операций см. в файле task.pdf.

В любом месте программы разрешён комментарий, начинающийся с /* и заканчивающийся */. Отступы и табуляция могут быть произвольны.

Дополнительно к заданию разработаны следующие режимы (активируются с помощью директив #define в заголовочном файле config.h): режим нечувствительности к регистру (отключён); режим альтернативных названий, позволяющий писать print вместо write, bool вместо boolean и str вместо string (включён на время тестирования); режим цепочек сравнений, в котором выражения вроде a > b > c синтаксически корректны и истинны при выполнении всех сравнений (в данном случае — a > b и b > c); режим ленивых вычислений, в которых цепочки and и or (но не сравнений!) выполняются до тех пор, пока не известен результат (в коде true and false and (i = true) последняя скобка не выполнится, так как false and X ложно независимо от значения X).