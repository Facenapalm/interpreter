program → `program` `{` descriptions operands `}`
descriptions → { type description `;` }
type → `int` | `string` | `bool` | `real`
description → variable { `,` variable }
variable → Identificator [ `=` constant ]
constant → ConstInt | ConstString | ConstBoolean | ConstReal
operators → { operator }
operator → `if` `(` expression `)` operator [ `else` operator ]
         | `while` `(` expression `)` operator
         | `do` operator `while` `(` expression `)` `;`
         | `continue` `;`
         | `break` `;`
         | `read` `(` Identificator `)` `;`
         | `write` `(` expression { `,` expression } `)` `;`
         | `{` operators `}`
         | expression `;`
expression → expression_or { `=` expression_or }
expression_or → expression_and { `or` expression_and }
expression_and → expression_cmp { `and` expression_cmp }
expression_cmp → expression_sum { comparer expression_sum }
comparer → `<` | `>` | `<=` | `>=` | `==` | `!=`
expression_sum → expression_mul { summator expression_mul }
summator → `+` | `-`
expression_mul → expression_un { multiplier expression_un }
multiplier → `*` | `/` | `%`
expression_un → unary_op expression_un | operand
unary_op → `+` | `-` | `not`
operand → constant | Identificator | `(` expression `)`